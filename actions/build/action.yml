name: Build
inputs:
  prefix: 
    default: ""
  env-type:
    required: true
    default: None

#   hw-type:
    # required: true
    # default: None

outputs:
  random-number:
    value: 13
runs:
  using: "composite"
  steps:
    # if ${{ inputs.env-type  == 'docker'}}; then
    #   source /usr/share/miniconda/etc/profile.d/conda.sh
    #   conda activate omnisci-dev
    # fi;

    - name: Build
      env:
        CPU_COUNT: 2
      run: |
        echo ${PWD}
        ls -la 
        echo "prefix: " ${{ inputs.prefix }}
        if ${{ inputs.env-type  == 'conda'}}; then
          which conda
          find / -name conda.sh
          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda activate omnisci-dev
        fi;
        if ${{ inputs.env-type  == 'docker'}}; then
          echo "=========================container ls========================="
          docker container ls -a
          docker start verify
          docker exec verify env && pwd
          docker exec verify chown -R $(whoami):$(whoami) /home/
          docker exec verify ls -la /home/hdk
          docker inspect -f "{{ .Mounts }}" verify
        fi;
        ${{ inputs.prefix }} mkdir build && cd build
        ${{ inputs.prefix }} pwd && cmake ..
        ${{ inputs.prefix }} make -j ${{ env.CPU_COUNT }}
        ${{ inputs.prefix }} make install
        ${{ inputs.prefix }} cd ..
        ${{ inputs.prefix }} tar -zcf /tmp/build.tgz .
      shell: bash
